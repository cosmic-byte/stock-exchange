version: '3'

services:
  stock-api:
    container_name: stock_api
    build:
      context: .
      dockerfile: '${PWD}/docker/dev.Dockerfile'
    env_file:
      - ./stock_exchange.env
    volumes:
      - ./stock_exchange:/var/app/stock_exchange
    command: /var/app/run_local.sh
    ports:
      - '8001:8001'
    image: stock_api:latest
    restart: on-failure
    depends_on:
      - base
      - stock-db
      - elk-search
    networks:
      - base-network
      - elk-network

  stock-db:
    container_name: stock_db
    image: postgres
    restart: always
    env_file:
      - ./stock_exchange.env
    volumes:
      - stock-db:/var/lib/postgresql/data
    networks:
      - base-network

  elk-search:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.3
    container_name: elk-search
    environment:
      - node.name=elk-search
      - cluster.name=esk-cluster
      - "discovery.type=single-node"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elk-data:/usr/share/elasticsearch/data
    networks:
      - elk-network
    healthcheck:
      test: [ "CMD", "curl", "localhost:9200/_cat/health" ]
      interval: 15s
      timeout: 5s
      retries: 4

  elk-kibana:
    image: docker.elastic.co/kibana/kibana:7.9.3
    container_name: elk-kibana
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://elk-search:9200
      ELASTICSEARCH_HOSTS: http://elk-search:9200
    networks:
      - elk-network
    depends_on:
      - elk-search

volumes:
  stock-db:
    driver: local
  elk-data:
    driver: local
